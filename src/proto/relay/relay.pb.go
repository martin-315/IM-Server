// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relay/relay.proto

package pbRelay // import "relay"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgToUserReq struct {
	SendID               string   `protobuf:"bytes,1,opt,name=SendID" json:"SendID,omitempty"`
	RecvID               string   `protobuf:"bytes,2,opt,name=RecvID" json:"RecvID,omitempty"`
	Content              string   `protobuf:"bytes,5,opt,name=Content" json:"Content,omitempty"`
	RecvSeq              int64    `protobuf:"varint,6,opt,name=RecvSeq" json:"RecvSeq,omitempty"`
	SendTime             int64    `protobuf:"varint,7,opt,name=SendTime" json:"SendTime,omitempty"`
	MsgFrom              int32    `protobuf:"varint,8,opt,name=MsgFrom" json:"MsgFrom,omitempty"`
	ContentType          int32    `protobuf:"varint,9,opt,name=ContentType" json:"ContentType,omitempty"`
	SessionType          int32    `protobuf:"varint,10,opt,name=SessionType" json:"SessionType,omitempty"`
	OperationID          string   `protobuf:"bytes,11,opt,name=OperationID" json:"OperationID,omitempty"`
	ServerMsgID          string   `protobuf:"bytes,12,opt,name=ServerMsgID" json:"ServerMsgID,omitempty"`
	PlatformID           int32    `protobuf:"varint,13,opt,name=PlatformID" json:"PlatformID,omitempty"`
	SenderNickName       string   `protobuf:"bytes,14,opt,name=SenderNickName" json:"SenderNickName,omitempty"`
	SenderFaceURL        string   `protobuf:"bytes,15,opt,name=SenderFaceURL" json:"SenderFaceURL,omitempty"`
	ClientMsgID          string   `protobuf:"bytes,16,opt,name=ClientMsgID" json:"ClientMsgID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgToUserReq) Reset()         { *m = MsgToUserReq{} }
func (m *MsgToUserReq) String() string { return proto.CompactTextString(m) }
func (*MsgToUserReq) ProtoMessage()    {}
func (*MsgToUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_relay_1ba173c940428df4, []int{0}
}
func (m *MsgToUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgToUserReq.Unmarshal(m, b)
}
func (m *MsgToUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgToUserReq.Marshal(b, m, deterministic)
}
func (dst *MsgToUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToUserReq.Merge(dst, src)
}
func (m *MsgToUserReq) XXX_Size() int {
	return xxx_messageInfo_MsgToUserReq.Size(m)
}
func (m *MsgToUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToUserReq proto.InternalMessageInfo

func (m *MsgToUserReq) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *MsgToUserReq) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *MsgToUserReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgToUserReq) GetRecvSeq() int64 {
	if m != nil {
		return m.RecvSeq
	}
	return 0
}

func (m *MsgToUserReq) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MsgToUserReq) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *MsgToUserReq) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *MsgToUserReq) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *MsgToUserReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *MsgToUserReq) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *MsgToUserReq) GetPlatformID() int32 {
	if m != nil {
		return m.PlatformID
	}
	return 0
}

func (m *MsgToUserReq) GetSenderNickName() string {
	if m != nil {
		return m.SenderNickName
	}
	return ""
}

func (m *MsgToUserReq) GetSenderFaceURL() string {
	if m != nil {
		return m.SenderFaceURL
	}
	return ""
}

func (m *MsgToUserReq) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

type MsgToUserResp struct {
	Resp                 []*SingleMsgToUser `protobuf:"bytes,1,rep,name=resp" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MsgToUserResp) Reset()         { *m = MsgToUserResp{} }
func (m *MsgToUserResp) String() string { return proto.CompactTextString(m) }
func (*MsgToUserResp) ProtoMessage()    {}
func (*MsgToUserResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_relay_1ba173c940428df4, []int{1}
}
func (m *MsgToUserResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgToUserResp.Unmarshal(m, b)
}
func (m *MsgToUserResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgToUserResp.Marshal(b, m, deterministic)
}
func (dst *MsgToUserResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToUserResp.Merge(dst, src)
}
func (m *MsgToUserResp) XXX_Size() int {
	return xxx_messageInfo_MsgToUserResp.Size(m)
}
func (m *MsgToUserResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToUserResp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToUserResp proto.InternalMessageInfo

func (m *MsgToUserResp) GetResp() []*SingleMsgToUser {
	if m != nil {
		return m.Resp
	}
	return nil
}

// message SendMsgByWSReq{
//  string SendID = 1;
//  string RecvID = 2;
//  string Content = 3;
//  int64 SendTime = 4;
//  int64  MsgFrom = 5;
//  int64  ContentType = 6;
//  int64  SessionType = 7;
//  string OperationID = 8;
//  int64  PlatformID = 9;
// }
type SingleMsgToUser struct {
	ResultCode           int64    `protobuf:"varint,1,opt,name=ResultCode" json:"ResultCode,omitempty"`
	RecvID               string   `protobuf:"bytes,2,opt,name=RecvID" json:"RecvID,omitempty"`
	RecvPlatFormID       int32    `protobuf:"varint,3,opt,name=RecvPlatFormID" json:"RecvPlatFormID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleMsgToUser) Reset()         { *m = SingleMsgToUser{} }
func (m *SingleMsgToUser) String() string { return proto.CompactTextString(m) }
func (*SingleMsgToUser) ProtoMessage()    {}
func (*SingleMsgToUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_relay_1ba173c940428df4, []int{2}
}
func (m *SingleMsgToUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleMsgToUser.Unmarshal(m, b)
}
func (m *SingleMsgToUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleMsgToUser.Marshal(b, m, deterministic)
}
func (dst *SingleMsgToUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleMsgToUser.Merge(dst, src)
}
func (m *SingleMsgToUser) XXX_Size() int {
	return xxx_messageInfo_SingleMsgToUser.Size(m)
}
func (m *SingleMsgToUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleMsgToUser.DiscardUnknown(m)
}

var xxx_messageInfo_SingleMsgToUser proto.InternalMessageInfo

func (m *SingleMsgToUser) GetResultCode() int64 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *SingleMsgToUser) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *SingleMsgToUser) GetRecvPlatFormID() int32 {
	if m != nil {
		return m.RecvPlatFormID
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgToUserReq)(nil), "relay.MsgToUserReq")
	proto.RegisterType((*MsgToUserResp)(nil), "relay.MsgToUserResp")
	proto.RegisterType((*SingleMsgToUser)(nil), "relay.SingleMsgToUser")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OnlineMessageRelayService service

type OnlineMessageRelayServiceClient interface {
	MsgToUser(ctx context.Context, in *MsgToUserReq, opts ...grpc.CallOption) (*MsgToUserResp, error)
}

type onlineMessageRelayServiceClient struct {
	cc *grpc.ClientConn
}

func NewOnlineMessageRelayServiceClient(cc *grpc.ClientConn) OnlineMessageRelayServiceClient {
	return &onlineMessageRelayServiceClient{cc}
}

func (c *onlineMessageRelayServiceClient) MsgToUser(ctx context.Context, in *MsgToUserReq, opts ...grpc.CallOption) (*MsgToUserResp, error) {
	out := new(MsgToUserResp)
	err := grpc.Invoke(ctx, "/relay.OnlineMessageRelayService/MsgToUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OnlineMessageRelayService service

type OnlineMessageRelayServiceServer interface {
	MsgToUser(context.Context, *MsgToUserReq) (*MsgToUserResp, error)
}

func RegisterOnlineMessageRelayServiceServer(s *grpc.Server, srv OnlineMessageRelayServiceServer) {
	s.RegisterService(&_OnlineMessageRelayService_serviceDesc, srv)
}

func _OnlineMessageRelayService_MsgToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineMessageRelayServiceServer).MsgToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/relay.OnlineMessageRelayService/MsgToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineMessageRelayServiceServer).MsgToUser(ctx, req.(*MsgToUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnlineMessageRelayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "relay.OnlineMessageRelayService",
	HandlerType: (*OnlineMessageRelayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MsgToUser",
			Handler:    _OnlineMessageRelayService_MsgToUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "relay/relay.proto",
}

func init() { proto.RegisterFile("relay/relay.proto", fileDescriptor_relay_1ba173c940428df4) }

var fileDescriptor_relay_1ba173c940428df4 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x15, 0x42, 0xbb, 0xf5, 0x75, 0x6d, 0xc1, 0xa0, 0xc9, 0xec, 0x80, 0xa2, 0x0a, 0x4d,
	0x11, 0x87, 0x21, 0x0d, 0x89, 0xcb, 0x6e, 0x2c, 0xaa, 0x14, 0x89, 0x6c, 0xc8, 0xe9, 0x2e, 0xdc,
	0xb2, 0xec, 0x11, 0x59, 0x24, 0x76, 0x6a, 0x87, 0x49, 0xfb, 0xef, 0xf8, 0xd3, 0x90, 0x9f, 0x5b,
	0x6a, 0x8a, 0xb8, 0x44, 0xf9, 0x7e, 0xef, 0xcb, 0xcb, 0xe7, 0xe7, 0x07, 0x2f, 0x0d, 0xb6, 0xd5,
	0xd3, 0x07, 0x7a, 0x5e, 0xf4, 0x46, 0x0f, 0x9a, 0x8d, 0x48, 0x2c, 0x7f, 0xc5, 0x70, 0x52, 0xd8,
	0x66, 0xad, 0xef, 0x2c, 0x1a, 0x81, 0x1b, 0x76, 0x0a, 0xe3, 0x12, 0xd5, 0x43, 0x9e, 0xf1, 0x28,
	0x89, 0xd2, 0x89, 0xd8, 0x2a, 0xc7, 0x05, 0xd6, 0x8f, 0x79, 0xc6, 0x9f, 0x79, 0xee, 0x15, 0xe3,
	0x70, 0x74, 0xad, 0xd5, 0x80, 0x6a, 0xe0, 0x23, 0x2a, 0xec, 0xa4, 0xab, 0x38, 0x4f, 0x89, 0x1b,
	0x3e, 0x4e, 0xa2, 0x34, 0x16, 0x3b, 0xc9, 0xce, 0xe0, 0xd8, 0x75, 0x5d, 0xcb, 0x0e, 0xf9, 0x11,
	0x95, 0xfe, 0x68, 0xf7, 0x55, 0x61, 0x9b, 0x95, 0xd1, 0x1d, 0x3f, 0x4e, 0xa2, 0x74, 0x24, 0x76,
	0x92, 0x25, 0x30, 0xdd, 0xb6, 0x5e, 0x3f, 0xf5, 0xc8, 0x27, 0x54, 0x0d, 0x91, 0x73, 0x94, 0x68,
	0xad, 0xd4, 0x8a, 0x1c, 0xe0, 0x1d, 0x01, 0x72, 0x8e, 0xdb, 0x1e, 0x4d, 0x35, 0x48, 0xad, 0xf2,
	0x8c, 0x4f, 0x29, 0x71, 0x88, 0x7c, 0x0f, 0xf3, 0x88, 0xa6, 0xb0, 0x4d, 0x9e, 0xf1, 0x13, 0xef,
	0x08, 0x10, 0x7b, 0x0b, 0xf0, 0xb5, 0xad, 0x86, 0xef, 0xda, 0x74, 0x79, 0xc6, 0x67, 0xf4, 0x93,
	0x80, 0xb0, 0x73, 0x98, 0xbb, 0xd3, 0xa0, 0xb9, 0x91, 0xf5, 0x8f, 0x9b, 0xaa, 0x43, 0x3e, 0xa7,
	0x26, 0x07, 0x94, 0xbd, 0x83, 0x99, 0x27, 0xab, 0xaa, 0xc6, 0x3b, 0xf1, 0x85, 0x2f, 0xc8, 0xf6,
	0x37, 0xa4, 0x53, 0xb7, 0x12, 0xd5, 0xe0, 0xf3, 0xbc, 0xf0, 0x79, 0x02, 0xb4, 0xbc, 0x82, 0x59,
	0x70, 0x83, 0xb6, 0x67, 0xef, 0xe1, 0xb9, 0x41, 0xdb, 0xf3, 0x28, 0x89, 0xd3, 0xe9, 0xe5, 0xe9,
	0x85, 0xbf, 0xf6, 0x52, 0xaa, 0xa6, 0xc5, 0xbd, 0x93, 0x3c, 0xcb, 0x0d, 0x2c, 0x0e, 0x0a, 0xee,
	0x7c, 0x02, 0xed, 0xcf, 0x76, 0xb8, 0xd6, 0x0f, 0x48, 0x5b, 0x10, 0x8b, 0x80, 0xfc, 0x77, 0x13,
	0xce, 0x61, 0xee, 0xde, 0xdc, 0x24, 0x56, 0x7e, 0x36, 0x31, 0xcd, 0xe6, 0x80, 0x5e, 0x96, 0xf0,
	0xe6, 0x56, 0xb5, 0x52, 0x61, 0x81, 0xd6, 0x56, 0x0d, 0x0a, 0x17, 0xcf, 0x0d, 0x58, 0xd6, 0xc8,
	0x3e, 0xc1, 0x64, 0x9f, 0xe4, 0xd5, 0x36, 0x7a, 0xb8, 0xa0, 0x67, 0xaf, 0xff, 0x85, 0xb6, 0xff,
	0xbc, 0xf8, 0x36, 0x23, 0x7c, 0xd5, 0xdf, 0x53, 0xbf, 0xfb, 0x31, 0xad, 0xf9, 0xc7, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xca, 0xdd, 0x7b, 0x0c, 0xfb, 0x02, 0x00, 0x00,
}
